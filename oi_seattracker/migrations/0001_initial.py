# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-01-16 21:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import macaddress.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('ip_address', models.GenericIPAddressField(primary_key=True, protocol='IPv4', serialize=False, verbose_name='IP address')),
                ('mac_address', macaddress.fields.MACAddressField(blank=True, integer=True, null=True, verbose_name='MAC address')),
                ('nice_name', models.SlugField(blank=True, help_text='This will be used to generate SSH client configuration to make it easier to connect for troubleshooting.', null=True, verbose_name='Internal hostname')),
            ],
            options={
                'verbose_name': 'computer',
                'verbose_name_plural': 'computers',
            },
        ),
        migrations.CreateModel(
            name='Healthcheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.TextField(choices=[('loadavg', 'Load average'), ('numcpus', 'Processor count'), ('homefree', 'Home mountpoint free space'), ('ntfsfree', 'Host NTFS mountpoint free space'), ('ramfree', 'Free RAM memory')])),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('value', models.FloatField()),
                ('computer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oi_seattracker.Computer')),
            ],
            options={
                'verbose_name': 'healthcheck',
                'verbose_name_plural': 'healthchecks',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.IntegerField(help_text="This is an numeric ID assigned to the participant by the central administration of the competition. It is used to associate participant's onsite workstation with their SIO2 account.", primary_key=True, serialize=False, verbose_name='Participant ID')),
                ('full_name', models.TextField(verbose_name='Full name')),
                ('computer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oi_seattracker.Computer', verbose_name='Assigned computer')),
            ],
            options={
                'verbose_name': 'participant',
                'verbose_name_plural': 'participants',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'computer group',
                'verbose_name_plural': 'computer groups',
            },
        ),
        migrations.AddField(
            model_name='computer',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='This will be used to generate Ansible host groups for easier managing. Groups are also printed on participant printouts. For locations with multiple participant rooms it is recommended to at least create a group for every room and assign it to the computers in that room to make printout delivery easier.', to='oi_seattracker.Tag', verbose_name='Groups'),
        ),
        migrations.AlterUniqueTogether(
            name='healthcheck',
            unique_together=set([('computer', 'parameter')]),
        ),
    ]
